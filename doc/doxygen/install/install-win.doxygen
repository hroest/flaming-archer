/**

	@page install_win Installation on Windows

  @section install_win_read Read this!


  This document addresses %OpenMS users and explains the
  installation procedure. If you only want to use the %OpenMS Proteomics Pipeline (TOPP), you are strongly
	encouraged to <b>download the windows binary installer</b>
	(see <a href="http://sourceforge.net/project/showfiles.php?group_id=90558" target="_blank">here</a>),
	instead of building %OpenMS from sources. The windows binary version should work on many versions of windows including WinXP, VISTA and Win2000
	and installation should take you a few minutes only. Be aware though that %OpenMS on any windows platform is currently only 32-bit enabled. A 64-bit version is on its way right now (expected January 2009).

  @warning Compilation (not installation!) of %OpenMS on Windows is experimental, but should work on any system with a Visual Studio 2005 compiler and above.

	This document especially considers the installation
  of several libraries which are required by %OpenMS. Most of these
  libraries are made available in our "contrib-package" (see below), or can be downloaded as binaries.
  <br>
  <br>

  <b>Required applications</b>

  <p>
  In order to compile %OpenMS, a proper compilation environment is required.

  @section install_win_setup Setup of environment


<b>Notation of this tutorial</b>
 <UL>
    <LI>whenever there is a $ this implies entering everything that follows the $ into a command line (usually the Visual Studio Command line)
    <LI>A string in <> is something the user needs to choose e.g. <path_to_contrib> means that this string should be replaced by the path where the user put the %OpenMS contrib package. Usually all commands where this is necessary come with examples, so don't worry.
    <LI>Whenever you added a path to your Windows Path Environment variable, restart the command line in order for the changes to take effect
  </UL>



<b>Pre-Requisites (Software)</b>
  <UL>
    <LI>have a Visual Studio 2005/2008 installed (2003 is not supported, but might work, if you compile your own contrib)
    <LI>Have CMake 2.6 or greater installed (www.cmake.org)
    <LI>if you work with the SVN version of OpenMS (instead of the Release package), we recommend downloading
    the svn binaries (which contain svnversion.exe). TortoiseSVN is *not* enough!
    You can find the binaries here: http://subversion.tigris.org
    Make sure to add the location of svnversion.exe to your PATH (usually this is "C:\progam files\subversion\bin")
  </UL>


  @section install_win_required Installing required dependency libraries

		%OpenMS depends on several other libraries. On a windows system, these are usually not present.
		Some of  those libraries again depend on others. Here is a little overview of the dependencies:

		<table cellpadding="2" cellspacing="0" border="0">
			<tr>
				<td align="left">&nbsp;</td>
				<td align="left">ANDI/MS</td>
				<td align="left">(requires NetCDF)</td>
			</tr>
			<tr>
				<td align="left">&nbsp;</td>
				<td align="left">GSL</td>
				<td align="left">&nbsp;</td>
			</tr>
			<tr>
				<td align="left">&nbsp;</td>
				<td align="left">CGAL</td>
				<td align="left">&nbsp;</td>
			</tr>
			<tr>
				<td align="left">&nbsp;</td>
				<td align="left">XERCES-C</td>
				<td align="left">&nbsp;</td>
			</tr>
			<tr>
				<td align="left">&nbsp;</td>
				<td align="left">libSVM</td>
				<td align="left">&nbsp;</td>
			</tr>
			<tr>
				<td align="left">&nbsp;</td>
				<td align="left">SeqAn</td>
				<td align="left">&nbsp;</td>
			</tr>
			<tr>
				<td align="left">&nbsp;</td>
				<td align="left">Qt</td>
				<td align="left">(requires other libraries for DB support e.g. MySQL)</td>
			</tr>
		</table>

    <b> Install Qt</b>
    QT (choose commercial or non-commercial - whatever is applicable to you: read more on the Trolltech website)
    <OL>
      <LI>non-commercial:
        <OL>
          <LI>download QT source (Qt for Open Source C++ development on Windows - http://trolltech.com/downloads/opensource/appdev/windows-cpp)
          <LI>extract zip file
          <LI>open a Visual Studio Command Line (use x64 version if you want 64bit apps!)
          <LI>$ cd <path-to-qt>
          <LI>$ configure.exe
          <LI>$ nmake
          <LI>now you should have Link-Libraries and DLL's (debug and release) in your <Qt>/lib directory
        </OL>
      <LI>commercial:
        <OL>
          <LI>we have no experience here, but it should be possible to get the DLL's and Link-Libraries here as well.
        </OL>
      <LI>set the Environment Variable QTDIR to your QT-Directory
      <LI>add the QT/bin (!) directory to your PATH Environment Variable


		In order to make the
		installation of the remaining required libraries easier, we composed a
		"contrib-package" containing the libraries ANDI/MS, NetCDF, GSL, CGAL, libSVM, SeqAn and XERCES-C.
		This contrib package has several advantages over manual installation
		<ul>
			<li>you get all the libraries in versions tested with %OpenMS.</li>
			<li>it contains a batch script that builds all the libraries in one step.</li>
			<li>you don't have to spend hours reading installation instructions of all the libraries.</li>
		</ul>
		We recommend using the contrib package! Qt and MySQL are not
		contained in the contrib package. If they are not installed on your system, you
		have to install those two libraries first.


		@subsection install_win_contrib Contrib installation

  @b Download:

  The contrib package is contained in the %OpenMS release package.

  If you are using the developer version of %OpenMS, you must check out the contrib from Sourceforge SVN repository
	<pre>&gt; svn co https://open-ms.svn.sourceforge.net/svnroot/open-ms/contrib</pre>
	to obtain the latest developer version (potentially unstable).

  @b Installation:

    [extend docu]
    BIG TODO: currently there is no contrib for Windows!!

    - make sure you check out the correct version (64 vs 32 bit), depending on what system you use!
    ...
    - add the <contrib>/lib | <contrib>/win/lib[32|64|/ directory to your PATH Environment Variable


  @section install_win_openms Installing OpenMS

		If you have not installed the libraries which %OpenMS requires,
		please refer to the section @ref install_win_required above. Otherwise you might only get parts of the
		full %OpenMS functionality.
		<br>
		Assuming you have successfully installed the dependent libraries, you need to
		get the %OpenMS source code. The latest stable version of %OpenMS
		can be found in the <a href="http://sourceforge.net/project/showfiles.php?group_id=90558" target="_blank">files</a>
		section. For further (e.g. latest developer version from SVN) info see the <a href="http://open-ms.sourceforge.net/download.php" target="_blank">download instructions</a>.
		<br>
		<br>
		After you got the source code open a VisualStudio Command line (see Start-Menu).
    To create Visual Studio Project Files using CMake:
    <OL>
      <LI>open a Visual Studio Command Line (use x64 version if you want 64bit apps!)
      <LI>create a build directory for OpenMS<br>
          -e.g. $ mkdir OpenMS_Win64
      <LI>call CMake to create the BuildSystem there
<code>
          $ cd <path_to_OpenMS_build_directory>
            e.g. $ cd OpenMS_Win64
          $ cmake -D CONTRIB_CUSTOM_DIR:PATH="<path_to_contrib>" -G "<generator>" "<path_to_OpenMS>"
</code>
          The choice of <generator> is dependent on your system. Type $ cmake to see a list of available generators.
            e.g. <code>$ cmake -D CONTRIB_CUSTOM_DIR:PATH="C:\svn\contrib" -G "Visual Studio 8 2005 Win64" "../OpenMS"</code>

      </OL>



  @section install_win_testing_openms Testing your OpenMS installation

		After you have installed %OpenMS, you can test your installation
		by executing "test" target in the IDE.


		@section install_win_topp Building the TOPP tools

		TOPP is a toolset for the analysis of HPLC/MS data. It consists of several small applications that can be chained to create analysis pipelines tailored for a specific problem.
		<BR>
		<BR>
		After you have built %OpenMS, you can build the TOPP tools
		by building the "TOPP" target in the IDE.

		<br>

		@section install_linux_testing_topp Testing the TOPP tools

		After you have built the TOPP tools, you can test by building the "TOPPtest" target in the IDE.


  @section create_doc Building the documentation (not working right now - sorry)

	In order to build the class documentation, TOPP tutorials and more, you will need to install three programs:

  <OL>
    <LI> Doxygen (1.5.4)
      <UL>
        <LI> download binaries for Windows (http://www.stack.nl/~dimitri/doxygen/download.html#latestsrc)
        <LI> extract them into a directory
        <LI> add this directory to to the Windows Path Environment
      </UL>
    <LI> MikTeX (2.6) - basic version (for DVIPS, LATEX etc).
      <UL>
         <LI> download binaries for Windows (http://miktex.org/)
         <LI> During installtion tick "install missing packages on the fly = yes"?!
         <LI> The installer SHOULD add the bin directory of MikTeX automatically to the Windows Path Environment (please recheck)
      </UL>
    <LI> GPL Ghostscript (8.60) for Windows
      <UL>
         <LI> Download binaries for Windows (http://www.ghostscript.com/awki -> Sourceforge -> Win32 Binaries) and install
         <LI> add the <i>&lt;path_to_GHOSTSCRIPT&gt;/bin</i> directory (e.g. c:/programs/gs/gs8.60/bin) to the Windows Path Environment
      </UL>
    <LI>  [extend doc]  (not working right now)


		<LI>
			Optional:<br>
				You can create dependency graphs using a doxygen plug-in called <tt>dot</tt>.
				<UL>
					<LI> download binaries for windows from http://www.graphviz.org (we tested: graphviz-2.18.exe)
					<LI> the installer should add dot.exe to your PATH
				</UL>


  </OL>


  @section enable_db Enabling database support (not working right now)
	%OpenMS accesses databases via QT. This instruction is based on QT 4.3.2. Other versions might differ.
	We try to install a MySQL driver (installing other db-drivers should work accordingly).

	The open-source version of QT (which is precompiled on windows) does not come with an enabled MySQL driver, so you'll need to recompile QT.

	Before that however, you'll need to build the MySQL-driver itself.

	<OL>
		<LI>Download MySQLServer4.1 and install it.</LI>

		<LI>
			Build QT with DB support
			<code>
> cd &lt;path_to_QT&gt;<br>
> configure -L &lt;path_to_MYSQLSERVER&gt;/lib/opt -l libmysql -I &lt;path_to_MYSQLSERVER&gt;/include -qt-sql-mysql -qt-sql-odbc -qt-sql-sqlite -qt-gif -qt-libpng -qt-libjpeg
			</code>
			and wait ...
		</LI>

		<LI>now build %OpenMS</LI>

		<LI>
			Now, create a database by opening the mysql command line client (from the start menu) and enter your root password.<br>
			Now type:<br>
			<code>
mysql> CREATE DATABASE OPENMS_TEST_DB;<br>
			</code>
			you should see something like:<br>
			<code>Query OK, 1 row affected (0.14 sec)</code>
		</LI>
	</OL>

	To test if the DB is accessible by %OpenMS, copy &lt;path_to_OpenMS&gt;/source/TEST/DB_credentials_template.txt to DB_credentials.txt and fill in the connection details into this file. As long as this file remains there, the test DBAdapter_test will be executed with any subsequent call of 'make test'.
	To test the two TOPP tools that enable DB communication, go to the '&lt;path_to_OpenMS&gt;/source/TEST/TOPP/' directory and copy the files 'DBImporter_input_template.ini' and 'DBExporter_input_template.ini' to 'DBImporter_input.ini' and 'DBExporter_input.ini', respectively. Then fill in your DB access details. As long as these files remain there, the DB will be tested with any subsequent call of 'make TOPPtest'.





*/

